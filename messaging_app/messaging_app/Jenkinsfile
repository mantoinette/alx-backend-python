pipeline {
    agent any
    
    environment {
        // GitHub credentials
        GITHUB_CREDS = credentials('github-credentials')
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Clean workspace before build
                cleanWs()
                // Checkout code from GitHub repository
                git branch: 'main',
                    credentialsId: 'github-credentials',
                    url: 'https://github.com/mushimiyimana/alx-backend-python.git'
            }
        }
        
        stage('Setup Python') {
            steps {
                script {
                    if (isUnix()) {
                        sh '''
                            python3 -m venv venv
                            . venv/bin/activate
                            python --version
                            python -m pip install --upgrade pip
                            python -m pip install -r messaging_app/requirements.txt
                            python -m pip install pytest pytest-html pytest-cov
                        '''
                    } else {
                        bat '''
                            python -m venv venv
                            .\\venv\\Scripts\\activate.bat
                            python --version
                            python -m pip install --upgrade pip
                            python -m pip install -r messaging_app\\requirements.txt
                            python -m pip install pytest pytest-html pytest-cov
                        '''
                    }
                }
            }
        }
        
        stage('Run Tests') {
            steps {
                script {
                    if (isUnix()) {
                        sh '''
                            . venv/bin/activate
                            cd messaging_app
                            mkdir -p test-reports
                            python -m pytest \
                                --html=test-reports/report.html \
                                --self-contained-html \
                                messaging_app/tests/
                        '''
                    } else {
                        bat '''
                            .\\venv\\Scripts\\activate.bat
                            cd messaging_app
                            if not exist test-reports mkdir test-reports
                            python -m pytest ^
                                --html=test-reports\\report.html ^
                                --self-contained-html ^
                                messaging_app\\tests\\
                        '''
                    }
                }
            }
            post {
                always {
                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'messaging_app/test-reports',
                        reportFiles: 'report.html',
                        reportName: 'Test Report'
                    ])
                }
            }
        }
    }
    
    post {
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
        always {
            cleanWs()
        }
    }
}