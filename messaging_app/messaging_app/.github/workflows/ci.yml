name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: messaging_app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 coverage

      - name: Run flake8 linting
        working-directory: messaging_app
        run: |
          # Fail if any linting errors are found
          flake8 . --count --exit-zero --statistics
          flake8 . --count --exit-code=1

      - name: Run migrations
        working-directory: messaging_app
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/test_db
        run: |
          python manage.py migrate

      - name: Run tests with coverage
        working-directory: messaging_app
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/test_db
        run: |
          coverage run --source='.' manage.py test
          coverage report
          coverage xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: messaging_app/coverage.xml
